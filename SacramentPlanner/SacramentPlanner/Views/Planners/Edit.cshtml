@model SacramentPlanner.Models.Planner

@{
   ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Planner</h4>
<hr />
<div class="row">
   <div class="col-md-4">
      <form asp-action="Edit">
         <div asp-validation-summary="ModelOnly" class="text-danger"></div>
         <input type="hidden" asp-for="PlannerID" />
         <div class="form-group">
            <label asp-for="SacramentDate" class="control-label"></label>
            <input asp-for="SacramentDate" class="form-control" />
            <span asp-validation-for="SacramentDate" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="Ward" class="control-label"></label>
            <input asp-for="Ward" class="form-control" />
            <span asp-validation-for="Ward" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="Presiding" class="control-label"></label>
            <input asp-for="Presiding" class="form-control" />
            <span asp-validation-for="Presiding" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="Conducting" class="control-label"></label>
            <input asp-for="Conducting" class="form-control" />
            <span asp-validation-for="Conducting" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="Invocation" class="control-label"></label>
            <input asp-for="Invocation" class="form-control" />
            <span asp-validation-for="Invocation" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="Benediction" class="control-label"></label>
            <input asp-for="Benediction" class="form-control" />
            <span asp-validation-for="Benediction" class="text-danger"></span>
         </div>
         <div id="speakers">
            <p class="control-label">Speakers</p>
            @for (int i = 0; i < Model.Speakers.Count; i++)
            {
               var input = @Model.Speakers.ElementAt(i).Name;

               <input class="form-control" type="text" name="Speakers[@i].Name" value='@input' />
            }
         </div>

         <br>
         <div id="hymns">
            <p class="control-label">Hymns</p>
            @for (int i = 0; i < Model.Hymns.Count; i++)
            {
               var input = @Model.Hymns.ElementAt(i).Title;

               <input class="form-control" type="text" name="Hymns[@i].Title" value='@input' />
            }
         </div>
         <input id="btnAddSpeaker" type="button" value="Add Speaker" class="btn btn-primary; colored " onclick="addSpeaker()" style=" color:white;" />
         <input id="btnAddHymn" type="button" value="Add Hymn" class="btn btn-primary; colored " onclick="addHymn()" style=" color:white;" />

         <div class="form-group" style="padding-top:5px;">
            <input type="submit" value="Save" class="btn btn-primary" />
         </div>
         <script>
            var noOfSpeaker = 0;
            var noOfHymn = 0;
            function addSpeaker() {
               $("#speakers").append("<input type='text' class='form-control' name='Speakers[" + noOfSpeaker + "].Name' /><p>");
               noOfSpeaker++;
            }
            function addHymn() {
               $("#hymns").append("<input type='text' class='form-control' name='Hymns[" + noOfHymn + "].Name' /><p>");
               noOfHymn++;
            }
         </script>
      </form>
   </div>
</div>

<div>
   <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
   @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}



